# Generated by Django 5.0.4 on 2024-04-27 09:59

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BehaviorType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("behavior_id", models.PositiveSmallIntegerField()),
                ("apply_remote_percent", models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category_id", models.IntegerField()),
                ("name", models.CharField(max_length=50)),
                ("is_public", models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name="CommunicationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Node",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("point", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(verbose_name="Название проекта")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата начала проекта"
                    ),
                ),
                (
                    "last_used_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Время последнего использования",
                    ),
                ),
                ("last_data_id", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="RegularTransportationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="RouteAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("attribute_id", models.IntegerField()),
                ("name", models.CharField(max_length=20)),
                ("value", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="RouteDirection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("direction", models.BooleanField(default=False)),
                ("length", models.FloatField(default=0)),
                (
                    "direction_name",
                    models.CharField(max_length=200, verbose_name="direction name"),
                ),
                ("number_of_trips", models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="RouteDirectionEdge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Season",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="BehaviorCategoryValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.FloatField()),
                (
                    "behavior_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category_values",
                        to="transport_network.behaviortype",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="behavior_values",
                        to="transport_network.category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DataFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="")),
                ("source_file_name", models.CharField(max_length=255)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Edge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("source_edge_id", models.PositiveIntegerField()),
                ("length", models.FloatField()),
                ("pedestrian_speed", models.FloatField()),
                ("cost", models.FloatField()),
                ("zone", models.IntegerField()),
                ("lane_num", models.IntegerField()),
                ("parking_cost", models.FloatField(default=0)),
                ("is_removed", models.BooleanField(default=False)),
                ("banned_edges", models.ManyToManyField(to="transport_network.edge")),
                (
                    "first_node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="edges_starts",
                        to="transport_network.node",
                    ),
                ),
                (
                    "last_node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="edges_ends",
                        to="transport_network.node",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Municipality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="municipalities",
                        to="transport_network.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Interval",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("interval_id", models.IntegerField()),
                ("interval_name", models.CharField(max_length=100)),
                ("day_type", models.CharField(max_length=100)),
                ("interval_start", models.TimeField()),
                ("interval_end", models.TimeField()),
                ("rush_hour", models.BooleanField(default=False)),
                (
                    "rush_hour_fraction",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ]
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="intervals",
                        to="transport_network.project",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="category",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="categories",
                to="transport_network.project",
            ),
        ),
        migrations.AddField(
            model_name="behaviortype",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="behavior_types",
                to="transport_network.project",
            ),
        ),
        migrations.CreateModel(
            name="ProjectFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "error_messages",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Load error messages"
                    ),
                ),
                (
                    "file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_files",
                        to="transport_network.datafile",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="source_files",
                        to="transport_network.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectShape",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("content", models.TextField()),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="models",
                        to="transport_network.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Forecast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("remote_jobs_percent", models.FloatField(default=0)),
                ("partial_remote_jobs_percent", models.FloatField(default=0)),
                (
                    "shape",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="forecasts",
                        to="transport_network.projectshape",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RegionType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="region_types",
                        to="transport_network.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("source_dist_id", models.IntegerField()),
                (
                    "municipality",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="regions",
                        to="transport_network.municipality",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="regions",
                        to="transport_network.project",
                    ),
                ),
                (
                    "region_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="regions",
                        to="transport_network.regiontype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Route",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "source_route_id",
                    models.PositiveIntegerField(verbose_name="source_route_id"),
                ),
                (
                    "route_number",
                    models.CharField(max_length=64, verbose_name="route number"),
                ),
                (
                    "route_long_name",
                    models.CharField(max_length=200, verbose_name="route long name"),
                ),
                (
                    "is_circle",
                    models.BooleanField(default=False, verbose_name="is circle"),
                ),
                ("carrier", models.CharField(max_length=100)),
                (
                    "communication_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transport_network.communicationtype",
                    ),
                ),
                (
                    "regular_transportation_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transport_network.regulartransportationtype",
                    ),
                ),
                (
                    "attributes",
                    models.ManyToManyField(
                        related_name="routes", to="transport_network.routeattribute"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RouteDirectionEdgeOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField()),
                (
                    "edge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transport_network.edge",
                    ),
                ),
                (
                    "route_direction_edge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="route_direction_edge_order",
                        to="transport_network.routedirectionedge",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="routedirectionedge",
            name="edges",
            field=models.ManyToManyField(
                related_name="route_direction_edges",
                through="transport_network.RouteDirectionEdgeOrder",
                to="transport_network.edge",
            ),
        ),
        migrations.CreateModel(
            name="RouteDirectionNode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField(default=0)),
                (
                    "node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="path_nodes",
                        to="transport_network.node",
                    ),
                ),
                (
                    "route_direction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="path_nodes",
                        to="transport_network.routedirection",
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
            },
        ),
        migrations.AddField(
            model_name="routedirectionedge",
            name="direction_node_from",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="path_out",
                to="transport_network.routedirectionnode",
            ),
        ),
        migrations.AddField(
            model_name="routedirectionedge",
            name="direction_node_to",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="path_in",
                to="transport_network.routedirectionnode",
            ),
        ),
        migrations.CreateModel(
            name="RouteVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "variant_number",
                    models.CharField(max_length=64, verbose_name="route number"),
                ),
                (
                    "variant_name",
                    models.CharField(max_length=200, verbose_name="variant name"),
                ),
                ("tariff_id", models.IntegerField(default=1)),
                ("tariff", models.IntegerField(default=30)),
                (
                    "route",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="transport_network.route",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="routedirection",
            name="route_variant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="directions",
                to="transport_network.routevariant",
            ),
        ),
        migrations.CreateModel(
            name="Scenario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("scenario_id", models.IntegerField()),
                ("is_base", models.BooleanField(default=False)),
                ("year", models.PositiveSmallIntegerField()),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scenarios",
                        to="transport_network.project",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="route",
            name="scenario",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="transport_network.scenario",
            ),
        ),
        migrations.CreateModel(
            name="RegionTraffic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("traffic", models.FloatField()),
                ("traffic_car", models.FloatField(default=0)),
                ("traffic_pass", models.FloatField(default=0)),
                ("traffic_pass_uncut", models.FloatField(default=0)),
                ("delta_ttc_traffic", models.FloatField(default=0)),
                ("delta_factor_traffic", models.FloatField(default=0)),
                ("public_transport_switch", models.FloatField(default=0)),
                ("ttc", models.FloatField(blank=True, null=True)),
                ("source", models.CharField(max_length=100)),
                (
                    "base_traffic",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="forecast_traffic",
                        to="transport_network.regiontraffic",
                    ),
                ),
                (
                    "forecast",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="traffic",
                        to="transport_network.forecast",
                    ),
                ),
                (
                    "interval",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transport_network.interval",
                    ),
                ),
                (
                    "region_from",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="region_from_forecast",
                        to="transport_network.region",
                    ),
                ),
                (
                    "region_to",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="region_to_forecast",
                        to="transport_network.region",
                    ),
                ),
                (
                    "scenario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transport_network.scenario",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="node",
            name="scenario",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="nodes",
                to="transport_network.scenario",
            ),
        ),
        migrations.AddField(
            model_name="edge",
            name="scenario",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="edges",
                to="transport_network.scenario",
            ),
        ),
        migrations.AddField(
            model_name="route",
            name="season",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="transport_network.season",
            ),
        ),
        migrations.CreateModel(
            name="Stop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("stop_id", models.PositiveIntegerField(verbose_name="stop id")),
                (
                    "stop_name",
                    models.CharField(max_length=200, verbose_name="stop name"),
                ),
                (
                    "node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stops",
                        to="transport_network.node",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stops",
                        to="transport_network.project",
                    ),
                ),
                (
                    "route_directions",
                    models.ManyToManyField(
                        through="transport_network.RouteDirectionNode",
                        to="transport_network.routedirection",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="routedirectionnode",
            name="stop",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="route_direction_nodes",
                to="transport_network.stop",
            ),
        ),
        migrations.CreateModel(
            name="VehicleClass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32, verbose_name="type ts")),
                ("sits", models.IntegerField()),
                ("area", models.IntegerField()),
                ("capacity", models.IntegerField()),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicle_classes",
                        to="transport_network.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RouteVehicleCount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("count", models.PositiveSmallIntegerField()),
                (
                    "route",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicle_count",
                        to="transport_network.route",
                    ),
                ),
                (
                    "vehicle_class",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transport_network.vehicleclass",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VehicleType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32, verbose_name="type ts")),
                ("max_speed", models.IntegerField()),
                ("is_public", models.BooleanField()),
                ("is_editable", models.BooleanField()),
                ("transport_type_id", models.IntegerField()),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicle_types",
                        to="transport_network.project",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="vehicleclass",
            name="vehicle_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="classes",
                to="transport_network.vehicletype",
            ),
        ),
        migrations.AddField(
            model_name="routeattribute",
            name="vehicle_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="route_attributes",
                to="transport_network.vehicletype",
            ),
        ),
        migrations.AddField(
            model_name="route",
            name="vehicle_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="routes",
                to="transport_network.vehicletype",
                verbose_name="vehicle type",
            ),
        ),
        migrations.CreateModel(
            name="IndicatorString",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("value", models.CharField(max_length=100)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transport_network.category",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="indicator_strings",
                        to="transport_network.project",
                    ),
                ),
                (
                    "vehicle_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transport_network.vehicletype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Indicator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("value", models.FloatField()),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transport_network.category",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="indicators",
                        to="transport_network.project",
                    ),
                ),
                (
                    "vehicle_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transport_network.vehicletype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EdgeVehicleSpeed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("speed_raw", models.FloatField()),
                ("speed_dedicated_lane_raw", models.FloatField()),
                ("dedicated_lane", models.BooleanField()),
                (
                    "edge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicle_speeds",
                        to="transport_network.edge",
                    ),
                ),
                (
                    "interval",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transport_network.interval",
                    ),
                ),
                (
                    "vehicle_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transport_network.vehicletype",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="edge",
            name="vehicle_types",
            field=models.ManyToManyField(
                related_name="edges", to="transport_network.vehicletype"
            ),
        ),
    ]
